<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>49</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>